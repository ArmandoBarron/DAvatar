version: '2'

volumes:
  orderer.example.com:
  peer0.org1.example.com:
  peer1.org1.example.com:

networks:
  byfn:
services:
  orderer.example.com:
    command: orderer
    image: hyperledger/fabric-orderer:$IMAGE_TAG
    environment:
      #- FABRIC_LOGGING_SPEC=INFO 
      - FABRIC_LOGGING_SPEC=debug 
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0 
      - ORDERER_GENERAL_GENESISMETHOD=file 
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block 
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP 
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp 
      - ORDERER_GENERAL_TLS_ENABLED=true 
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key 
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt 
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt] 
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1 
      - ORDERER_KAFKA_VERBOSE=true 
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt 
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key 
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    container_name: orderer.example.com
    volumes:
      - ${PWD}/channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block 
      - ${PWD}/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/msp:/var/hyperledger/orderer/msp 
      - ${PWD}/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/:/var/hyperledger/orderer/tls 
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    ports:
      - "7050:7050"
    networks:
      - byfn
    depends_on:
      - peer0.org1.example.com
      - peer1.org1.example.com

  couchdb0:
    container_name: couchdb0
    image: hyperledger/fabric-couchdb
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=adminpw
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_byfn
    ports:
      - "5984:5984"
    networks:
    - byfn
    depends_on:
      - peer0.org1.example.com

  peer0.org1.example.com:
    command: peer node start
    container_name: peer0.org1.example.com
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock 
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_byfn 
      - FABRIC_LOGGING_SPEC=INFO 
      - CORE_PEER_TLS_ENABLED=true 
      - CORE_PEER_GOSSIP_USELEADERELECTION=true 
      - CORE_PEER_GOSSIP_ORGLEADER=false 
      - CORE_PEER_PROFILE_ENABLED=true 
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt 
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key 
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt 
      - CORE_PEER_ID=peer0.org1.example.com 
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051 
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051 
      - CORE_PEER_CHAINCODEADDRESS=peer0.org1.example.com:7052 
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052 
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org1.example.com:8051 
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.example.com:7051 
      - CORE_PEER_LOCALMSPID=Org1MSP 
      - CORE_LEDGER_HISTORY_ENABLEHISTORYDATABASE=true 
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB 
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=adminpw
    depends_on:
      - couchdb0
    image: hyperledger/fabric-peer:$IMAGE_TAG
    ports:
      - 7051:7051
    volumes:
      - /var/run/:/host/var/run/ 
      - ${PWD}/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp:/etc/hyperledger/fabric/msp 
      - ${PWD}/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls:/etc/hyperledger/fabric/tls
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    networks:
      - byfn

  couchdb1:
    container_name: couchdb1
    image: hyperledger/fabric-couchdb
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=adminpw
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_byfn
    ports:
      - "6984:5984"
    networks:
    - byfn
    depends_on:
      - peer1.org1.example.com

  peer1.org1.example.com:
    command: peer node start
    container_name: peer1.org1.example.com
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock 
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_byfn 
      - FABRIC_LOGGING_SPEC=INFO 
      - CORE_PEER_TLS_ENABLED=true 
      - CORE_PEER_GOSSIP_USELEADERELECTION=true 
      - CORE_PEER_GOSSIP_ORGLEADER=false 
      - CORE_PEER_PROFILE_ENABLED=true 
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt 
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key 
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt 
      - CORE_PEER_ID=peer1.org1.example.com 
      - CORE_PEER_ADDRESS=peer1.org1.example.com:8051 
      - CORE_PEER_LISTENADDRESS=0.0.0.0:8051 
      - CORE_PEER_CHAINCODEADDRESS=peer1.org1.example.com:8052 
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:8052 
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org1.example.com:7051 
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org1.example.com:8051 
      - CORE_PEER_LOCALMSPID=Org1MSP 
      - CORE_LEDGER_HISTORY_ENABLEHISTORYDATABASE=true 
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB 
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=adminpw
    depends_on:
      - couchdb1
    image: hyperledger/fabric-peer:$IMAGE_TAG
    ports:
      - 8051:8051
    volumes:
      - /var/run/:/host/var/run/ 
      - ${PWD}/crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/msp:/etc/hyperledger/fabric/msp 
      - ${PWD}/crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls:/etc/hyperledger/fabric/tls 
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    networks:
      - byfn

  cli1:
    command: /bin/bash
    container_name: cli1
    depends_on:
    - peer0.org1.example.com
    - peer1.org1.example.com
    - orderer.example.com
    environment:
      - SYS_CHANNEL=$SYS_CHANNEL 
      - GOPATH=/opt/gopath 
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock 
      - FABRIC_LOGGING_SPEC=INFO 
      - CORE_PEER_ID=cli1 
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051 
      - CORE_PEER_LOCALMSPID=Org1MSP 
      - CORE_PEER_TLS_ENABLED=true 
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt 
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key 
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt 
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp 
      - CORE_PEER_NETWORKID=cli1 
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_byfn
    image: hyperledger/fabric-tools:$IMAGE_TAG
    stdin_open: true
    tty: true
    volumes:
      - /var/run/:/host/var/run/ 
      - ${PWD}/chaincode/:/opt/gopath/src/github.com/chaincode 
      - ${PWD}/crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ 
      - ${PWD}/scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/ 
      - ${PWD}/channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts 
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    networks:
    - byfn
